#!/usr/bin/env sh
# SPDX-License-Identifier: MIT

process () {
	echo "Process"
	#while IFS= read -r -d '' -u 9
	#do
	#	echo "${REPLY}"
	#done 9< < $( find . -type f -print0 )
}

print_version () {
	printf "version 0.1.0"
}

print_help () {
	cat << HELP
USAGE:
  shy [ OPTIONS ] [ FLAGS ]

OPTIONS:
  -s   the source folder to scan
  -d   where to write the outputs
  -t   the template to fill with any processed Markdown

FLAGS:
  -v   print the version number
  -h   print the help text

EXAMPLE:
  shy -s src/ -d dest/ -t template.html
HELP
}


flag_s=
s_val=
flag_d=
d_val=
flag_t=
t_val=
while getopts "s:d:t:vh" flag
do
	case "${flag}" in
		v)      print_version
			exit 1;;
		h)      print_help
			exit 1;;
		s)      flag_s=1
			s_val="${OPTARG}";;
		d)      flag_d=1
			d_val="${OPTARG}";;
		t)      flag_t=1
			t_val="${OPTARG}";;
		?)      printf "usage: %s: [-v] [-h] -s <SRC> -d <DST> -t <TEMPLATE>\n" "$0"
			exit 1;;
	esac
done

if [ -z $flag_s ]; then
	printf "missing -s, need to specify source directory\n"
	exit 1
fi

if [ -z $flag_d ]; then
	printf "missing -d, need to specify destination directory\n"
	exit 1
fi

if [ -z $flag_t ]; then
	printf "missing -t, need to specify template file\n"
	exit 1
fi

process "${s_val}", "${d_val}", "${t_val}"

